“buscar como programar en multi-hilo o multi-core en python, o crear un programa en python de como implementarlo”

Diferencias entre multi-hilo y multi-core, son procesos diferentes y son determinados para deferentes procesos.
Que es sincronización y a sincronización

Multi-hilo
Es el proceso en el que múltiples hilos se ejecutan al mismo tiempo en un proceso. En un multiprocesador la planificación involucra tres aspectos interrelacionados: La asignación de procesos a procesadores. El uso de la multiprogramación en cada procesador individual. La activación del proceso.
Proceso síncrono. Es una ejecución lineal, no cambia hasta que la función halla terminado.
Por lo que se puede emplear en multiprogramación con hilos y multi hilos
Procesos mejorados con Multi-hilos
•	Webscraping
•	Leer y escribir en archivos
•	Compartir datos entre programas
•	Comunicaciones de red


Ejemplo de Multi-hilos:
import threading
import datetimne

class ThreadClass(threading.Thread):
	def run(self):
		now = datetime.datetime.now()
		print(“%s  Decir hole en el tiempo: %s” %(self.getName(), now))
for I in range (3):
	t = ThreadClass()
	t.start()

Salida 
Thread-1 dice hola en el tiempo: 2018-07-30 12:31:56.951899
Thread-2 dice hola en el tiempo: 2018-07-30 12:31:56.985901


Al importar el módulo threading tenemos acceso a todos sus métodos. Para poder imprimir el tiempo en el que se ejecuta cada proceso hemos importado el módulo datetime.
En el ejemplo hemos creado una clase llamada "ThreadClass", la cual hereda métodos de la clase "Thread" perteneciente al módulo "threading".
Multi-core
Son múltiples procesos que se ejecutan utilizando una o más procesos. La planificación combinada trata de establecer una nueva estrategia de planificación que reduzca los cambios de contexto y las interferencias generadas con el uso de recursos compartidos entre los núcleos.
Se da un tipo de sincronización asíncrono, ya que sus múltiples procesos se ejecutan a la ves con tal de completar la ejecución de las tareas., la programación asíncrona consiste en varios procesos diferentes de forma simultánea popara la realización de una o varias tareas o no entre sí.
Procesos en CPU mejorados:
•	Cálculos 
•	Formatos de texto
•	Cambio de imagen
•	Análisis de datos
Ejemplo Multi-core
from multiprocessing.dummy import Pool as ThreadPool
import urllib3

pool = ThreadPool(4)
urls = [‘https://www.python.org', 'https://www.yahoo.com’, ‘https://www.google.com', 'https://pythondiario.com’]

results = pool.map(urilib3.connectino_from_url, urls)
for re in results:
	print(re)
pool.close()
pool.join()


Salida:
HTTPSConnectionPool(host='www.python.org', port=443)
HTTPSConnectionPool(host='www.yahoo.com', port=443)
HTTPSConnectionPool(host='www.google.com', port=443)
HTTPConnectionPool(host='pythondiario.com', port=80)
